@{
    ViewBag.Title = "SupperSlonic Home Page";
}
<div class="demo" style="width:178px;float:left;"><img src="~/Content/img/aws.png" alt="awsLogo"/></div>
<p style="white-space:nowrap">I wrote a <strong>Java package</strong> that allows you to work with <strong>Amazon Web Services</strong> in a more convenient fashion.</p>
<p>This package is provided as a <strong>Maven dependency</strong>. You can find code examples on this web site.</p><br/><br/>
<div class="demo" style="width:250px;float:right;margin-right:60px;margin-top:0">
    <img style="float:right" src="~/Content/img/storage.png" alt="mavenStorage" />
    <p>The latest <strong>Maven version</strong>: <strong>1.2</strong></p>
    <p>In one month I will release a <strong>.NET library</strong> with similar functionality.</p>
</div>
<p>At the moment I support the following Amazon Web Services:</p>
<ul class="check-list">
	<li>DynamoDB;</li>
	<li>Elastic Map Reduce (EMR).</li>
</ul>
<h1>DynamoDB</h1>
<p>I have a solution for DynamoDB to deploy into and work with <strong>different environments</strong> (such as test, development, production) simultaneously and in a consistent and isolated way.<br />
Moreover, my package includes support for a <strong>locking mechanism</strong> (pessimistic locking) for tables or records to enable atomic multistep operations on complex data.</p>
<h1>Elastic Map Reduce</h1>
<p>Anyone who has ever worked with <strong>Hadoop</strong> before is probably well acquainted with the <strong>oozie workflow</strong>.<br />
A very good feature of the oozie workflow is that you can describe all the steps needed to be run in a xml file. And every time you run your workflow you can reuse this file.</p>
<p>Amazon has a web service, <strong>Amazon Elastic MapReduce (EMR)</strong>, that allows you to host Hadoop framework and process vast amounts of data. It also has a web interface to create a job flow with multiple steps and bootstrap actions to be run on each instance before an actual Hadoop job.</p>
<p>But you should specify these steps manually before running a job and you have no way to store your job flow template somewhere.</p>
<p>I wrote a Java package that allows you to <strong>save all your settings in a file and kick EMR jobs locally</strong> using just this file. This file is a simple properties file in which you can describe:</p>
<ul class="check-list">
    <li>Type and number of EC2 instances;</li>
    <li>Any number of custom steps in a job flow;</li>
    <li>Any number of bootstrap actions;</li>
    <li>Hadoop, HBase and debug configuration.</li>
</ul>
<p>This package already has a set of <strong>predefined bootstrap actions and steps</strong> to start HBase or debug mode, so you just need to set up corresponding Boolean properties.</p>
<p>Next release will support an XML version of a job flow template too.</p>